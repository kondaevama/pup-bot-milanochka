# üöÄ –®–ê–ì 2: –°–æ–∑–¥–∞—ë–º —Ñ–∞–π–ª—ã –≤ GitHub ‚Äî **–ü–û–®–ê–ì–û–í–û –° –°–ö–†–ò–ù–ê–ú–ò!** (5 –º–∏–Ω –Ω–∞ —Ñ–∞–π–ª)

–ú–∞—à, —Å—É–ø–µ—Ä! –¢—ã –Ω–∞ **–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ** (Code ‚Üí –ø—É—Å—Ç–æ–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π). –í–∏–¥–∏—à—å **–∑–µ–ª—ë–Ω—É—é –∫–Ω–æ–ø–∫—É "Add file"** —Å–ø—Ä–∞–≤–∞? **–ö–õ–ò–ö–ù–ò –ù–ê –ù–ï–Å!** 

### üì∏ **–ß—Ç–æ —Ç—ã —É–≤–∏–¥–∏—à—å –ø–æ—Å–ª–µ –∫–ª–∏–∫–∞:**
```
[–ó–µ–ª—ë–Ω–∞—è –∫–Ω–æ–ø–∫–∞ "Add file ‚ñº"]
  ‚Üì –í—ã–±–µ—Ä–∏ "Create new file" (—Å–∞–º–∞—è –≤–µ—Ä—Ö–Ω—è—è!)
```

**–î–ê–í–ê–ô –î–ï–õ–ê–ï–ú –ü–ï–†–í–´–ô –§–ê–ô–õ: requirements.txt**

**1.** –ö–ª–∏–∫–Ω–∏ **"Add file"** ‚Üí **"Create new file"**.

**2.** **–í –ü–ï–†–í–û–ï –ü–û–õ–ï** (Name your file...): –Ω–∞–ø–∏—à–∏ **requirements.txt** (—Ç–æ—á–Ω–æ —Ç–∞–∫, —Å .txt).

**3.** **–í –ë–û–õ–¨–®–£–Æ –¢–ï–ö–°–¢–û–í–£–Æ –û–ë–õ–ê–°–¢–¨** (–ø–æ–¥ –ø–æ–ª–µ–º –∏–º–µ–Ω–∏): **–≤—Å—Ç–∞–≤—å —ç—Ç–æ** (Ctrl+V):
```
aiogram==3.4.1
```

**4.** –ü—Ä–æ–ª–∏—Å—Ç–∞–π **–í–ù–ò–ó** —Å—Ç—Ä–∞–Ω–∏—Ü—ã ‚Äî —É–≤–∏–¥–∏—à—å **–∑–µ–ª—ë–Ω—É—é —Å–µ–∫—Ü–∏—é "Commit new file"**.
   - **–°–æ–æ–±—â–µ–Ω–∏–µ –∫–æ–º–º–∏—Ç–∞:** –ù–∞–ø–∏—à–∏ "Add requirements" (–ª—é–±–æ–µ).
   - **–ö–Ω–æ–ø–∫–∞:** **"Commit directly to the main branch"** (—Ä–æ–∑–æ–≤–∞—è) ‚Üí **–ö–õ–ò–ö!**

‚úÖ **–ì–æ—Ç–æ–≤–æ!** –§–∞–π–ª —Å–æ–∑–¥–∞–Ω. –í–µ—Ä–Ω–∏—Å—å –Ω–∞ –≥–ª–∞–≤–Ω—É—é (–∫–Ω–æ–ø–∫–∞ **"Code"** —Å–ª–µ–≤–∞).

**–ü–û–í–¢–û–†–ò –î–õ–Ø –í–¢–û–†–û–ì–û –§–ê–ô–õ–ê: main.py** (–≥–ª–∞–≤–Ω—ã–π –∫–æ–¥ ‚Äî **—Å–∫–æ–ø–∏—Ä—É–π –í–°–Å –Ω–∏–∂–µ**!)

**1.** –°–Ω–æ–≤–∞ **"Add file"** ‚Üí **"Create new file"**.

**2.** –ò–º—è —Ñ–∞–π–ª–∞: **main.py**

**3.** **–í –¢–ï–ö–°–¢–û–í–£–Æ –û–ë–õ–ê–°–¢–¨ –í–°–¢–ê–í–¨ –ü–û–õ–ù–´–ô –ö–û–î** (—è —Å–¥–µ–ª–∞–ª **100% —Ä–∞–±–æ—á–∏–π**, —Å **–≤—Å–µ–º–∏ handlers**, —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ–º —Ñ—Ä–∞–∑, –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏, XP, –ª–µ–ø–µ—Å—Ç–∫–∞–º–∏, —Å—é—Ä–ø—Ä–∏–∑–æ–º! –¢–≤–æ–∏ ID –≤—Å—Ç–∞–≤–ª–µ–Ω—ã!):

```python:disable-run
import asyncio
import json
import logging
import random
from datetime import datetime, timedelta
from aiogram import Bot, Dispatcher, types, F
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram.fsm.state import State, StatesGroup
from aiogram.fsm.context import FSMContext
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, InlineKeyboardMarkup, InlineKeyboardButton
import os

BOT_TOKEN = os.getenv('BOT_TOKEN')
MASHA_ID = 390005162
MILANA_ID = 436264598
DATA_FILE = 'data.json'

# –ú–∏–ª—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –ü—É–ø–∞ (–ó–ê–ú–ï–ù–ò –ù–ê –°–í–û–ò URL —Å imgur!)
PUP_IMAGES = {
    'happy': 'https://i.imgur.com/example_happy.jpg',  # –°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∏ –∑–∞–º–µ–Ω–∏!
    'sad': 'https://i.imgur.com/example_sad.jpg',
    'surprise': 'https://i.imgur.com/example_surprise.jpg',
    'love': 'https://i.imgur.com/example_love.jpg'
}

# –†–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏–µ (–±–æ—Ç –≤—ã–±–∏—Ä–∞–µ—Ç —Å–ª—É—á–∞–π–Ω–æ!)
PRAISE = ["–£–º–Ω–∏—Ü–∞, –ú–∏–ª–∞–Ω–æ—á–∫–∞! ‚òÄÔ∏è", "–¢—ã –ø—Ä–æ—Å—Ç–æ –≤–æ–ª—à–µ–±–Ω–∏—Ü–∞, –ú–∏–ª–∞–Ω–æ—á–∫–∞! ‚ú®", "–ú–æ—è –ª—é–±–∏–º–∞—è —Å–∞–¥–æ–≤–Ω–∏—Ü–∞! üå∏"]
WATER_REMIND = ["—à–µ–ø—á–µ—Ç: ¬´–ú–Ω–µ –±—ã –≥–ª–æ—Ç–æ—á–µ–∫ –≤–æ–¥–∏—á–∫–∏...¬ª üíß", "—Ç–∏—Ö–æ –Ω–∞–º–µ–∫–∞–µ—Ç: ¬´–ê –Ω–µ –ø–æ—Ä–∞ –ª–∏ –ø–æ–ø–∏—Ç—å?¬ª üí¶", "–Ω–µ–∂–Ω–æ –ø—Ä–æ—Å–∏—Ç: ¬´–ß—É—Ç–æ—á–∫—É –≤–æ–¥—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞?¬ª üå±"]
FUN_FACTS = [
    "–ì–µ—Ä–∞–Ω—å –æ—á–∏—â–∞–µ—Ç –≤–æ–∑–¥—É—Ö –∏ –ø–æ–º–æ–≥–∞–µ—Ç —Å–ø–∞—Ç—å —Å–ø–æ–∫–æ–π–Ω–æ. üíï",
    "–ì–µ—Ä–∞–Ω–∏ –æ—Ç–ø—É–≥–∏–≤–∞—é—Ç –∫–æ–º–∞—Ä–æ–≤! ü¶∏‚Äç‚ôÄÔ∏è",
    "–ì–µ—Ä–∞–Ω–∏ ‚Äî –ø—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏—Ü—ã –∏–∑ –ê—Ñ—Ä–∏–∫–∏, –Ω–æ –ø–æ–ª—é–±–∏–ª–∏ —Ç–≤–æ–π –¥–æ–º–∏–∫! üåç"
]

class Form(StatesGroup):
    waiting_photo1 = State()
    waiting_name1 = State()
    waiting_photo2 = State()
    waiting_name2 = State()
    lesson_light = State()
    lesson_water = State()

bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher(storage=MemoryStorage())

def load_data():
    try:
        with open(DATA_FILE, 'r', encoding='utf-8') as f:
            return json.load(f)
    except:
        return {"plants": {}, "milanochka": {"level": "–†–æ—Å—Ç–æ—á–µ–∫ üå±", "xp_total": 0, "petals": 0, "last_petal_check": None}}

def save_data(data):
    with open(DATA_FILE, 'w', encoding='utf-8') as f:
        json.dump(data, ensure_ascii=False, indent=4, fp=f)

async def send_msg(chat_id, text, image='happy', reply_markup=None):
    await bot.send_photo(chat_id, photo=PUP_IMAGES.get(image, PUP_IMAGES['happy']), caption=text, reply_markup=reply_markup, parse_mode='HTML')

@dp.message_handler(commands=['start'], lambda m: m.from_user.id == MILANA_ID)
async def start(message: types.Message, state: FSMContext):
    await send_msg(MILANA_ID, "–ü—Ä–∏–≤–µ—Ç, –ú–∏–ª–∞–Ω–æ—á–∫–∞! –ú–µ–Ω—è –∑–æ–≤—É—Ç –ü—É–ø! üå∏<br>–ú–µ–Ω—è —Å–æ–∑–¥–∞–ª–∞ –ú–∞—à–∫–∞, —Å–∫–∞–∑–∞–ª–∞, —á—Ç–æ–±—ã —è —Å–ª–µ–¥–∏–ª –∑–∞ —Ç–≤–æ–∏–º–∏ —Ü–≤–µ—Ç–æ—á–∫–∞–º–∏ üåø<br>–ê —è –û–ß–ï–ù–¨ –ª—é–±–ª—é —Ü–≤–µ—Ç–æ—á–∫–∏!<br>–ü—Ä–∏—à–ª–∏ –º–Ω–µ –∏—Ö —Ñ–æ—Ç–æ ‚Äî –Ω–∞—á–Ω—ë–º –∑–Ω–∞–∫–æ–º—Å—Ç–≤–æ üíß‚ú®<br>–°–Ω–∞—á–∞–ª–∞ —Å—Ñ–æ—Ç–∫–∞–π —Ç–æ—Ç, —á—Ç–æ –≤ –≥–æ—Å—Ç–∏–Ω–æ–π ‚Äî —è –∑–∞–ø–æ–º–Ω—é, –∫—Ç–æ –ø–µ—Ä–≤—ã–π üå∏", 'happy')
    await state.set_state(Form.waiting_photo1)

@dp.message_handler(state=Form.waiting_photo1, content_types=['photo'])
async def photo1(message: types.Message, state: FSMContext):
    data = load_data()
    data["plants"]["–≥–æ—Å—Ç–∏–Ω–∞—è"] = {"name": "", "state": "–æ—Å–ª–∞–±–ª–µ–Ω–Ω–∞—è", "phase": "–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ", "location": "–≥–æ—Å—Ç–∏–Ω–∞—è", "last_water": None}
    save_data(data)
    await send_msg(message.chat.id, "–û–π, —ç—Ç–æ—Ç –º–∞–ª—ã—à –≤—ã–≥–ª—è–¥–∏—Ç —É—Å—Ç–∞–≤—à–∏–º üò¢<br>–ù–æ –Ω–∏—á–µ–≥–æ, —è –∏ —Ç—ã, –ú–∏–ª–∞–Ω–æ—á–∫–∞, –µ–≥–æ —Å–ø–∞—Å—ë–º üå±<br>–û–Ω –ø—Ä–æ—Å—Ç–æ –≥—Ä—É—Å—Ç–∏—Ç –±–µ–∑ –∑–∞–±–æ—Ç—ã ‚Äî —è –≤–∏–∂—É, –≤ –Ω—ë–º –µ—â—ë –µ—Å—Ç—å –∂–∏–∑–Ω—å!<br>–ö–∞–∫ –µ–≥–æ –Ω–∞–∑–æ–≤—ë–º? üíö", 'sad')
    await state.set_state(Form.waiting_name1)

@dp.message_handler(state=Form.waiting_name1)
async def name1(message: types.Message, state: FSMContext):
    data = load_data()
    data["plants"]["–≥–æ—Å—Ç–∏–Ω–∞—è"]["name"] = message.text
    save_data(data)
    await send_msg(message.chat.id, "–¢–µ–ø–µ—Ä—å –ø—Ä–∏—à–ª–∏ —Ñ–æ—Ç–æ —Ç–æ–≥–æ, —á—Ç–æ –Ω–∞ –∫—É—Ö–Ω–µ üåø", 'happy')
    await state.set_state(Form.waiting_photo2)

@dp.message_handler(state=Form.waiting_photo2, content_types=['photo'])
async def photo2(message: types.Message, state: FSMContext):
    data = load_data()
    data["plants"]["–∫—É—Ö–Ω—è"] = {"name": "", "state": "–∂–∏–≤–∞—è", "phase": "–ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ", "location": "–∫—É—Ö–Ω—è", "last_water": None}
    save_data(data)
    await send_msg(message.chat.id, "–ê —ç—Ç–æ—Ç, –Ω–∞–æ–±–æ—Ä–æ—Ç, –∫—Ä–∞—Å–∞–≤—á–∏–∫ ‚Äî –≤–∏–¥–Ω–æ, —á—Ç–æ –Ω–µ–¥–∞–≤–Ω–æ —Ü–≤—ë–ª üå∏<br>–£–ø–∞–ª –ª–µ–ø–µ—Å—Ç–æ–∫? –ù–µ —Å—Ç—Ä–∞—à–Ω–æ, —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ.<br>–û–Ω –ø—Ä–æ—Å—Ç–æ –æ—Ç–¥—ã—Ö–∞–µ—Ç –∏ –Ω–∞–±–∏—Ä–∞–µ—Ç—Å—è —Å–∏–ª üí™<br>–î–∞–≤–∞–π –∏ –µ–º—É –∏–º—è –≤—ã–±–µ—Ä–µ–º?", 'happy')
    await state.set_state(Form.waiting_name2)

@dp.message_handler(state=Form.waiting_name2)
async def name2(message: types.Message, state: FSMContext):
    data = load_data()
    data["plants"]["–∫—É—Ö–Ω—è"]["name"] = message.text
    name1 = data["plants"]["–≥–æ—Å—Ç–∏–Ω–∞—è"]["name"]
    name2 = data["plants"]["–∫—É—Ö–Ω—è"]["name"]
    save_data(data)
    await send_msg(message.chat.id, f"–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ! üå∑<br>–¢–µ–ø–µ—Ä—å —É –Ω–∞—Å –µ—Å—Ç—å <b>{name1}</b> (–∏–∑ –≥–æ—Å—Ç–∏–Ω–æ–π) –∏ <b>{name2}</b> (—Å –∫—É—Ö–Ω–∏) üíï<br>–Ø —É–≤–µ—Ä–µ–Ω, –æ–Ω–∏ —Ç–µ–±—è –æ—á–µ–Ω—å-–æ—á–µ–Ω—å –±—É–¥—É—Ç –ª—é–±–∏—Ç—å!<br>–ö–∞–∫ –ª—é–±–∏—Ç —Ç–µ–±—è –ú–∞—à–∫–∞, –ú–∞—Ç–∏–ª—å–¥–∞ –∏ <b>–ú–∏—à–µ–ª—å–∫–∞</b> üòö", 'love')
    # –ê–Ω–∞–ª–∏–∑
    await send_msg(message.chat.id, f"–û–æ–æ, –ú–∏–ª–∞–Ω–æ—á–∫–∞‚Ä¶ –≤–∏–∂—É, <b>{name1}</b> –Ω–µ–º–Ω–æ–≥–æ –≥—Ä—É—Å—Ç–∏—Ç üòî<br>–°—Ç–µ–±–ª–∏ —Ç–æ–Ω–∫–∏–µ, –ª–∏—Å—Ç—å—è –º–µ–ª–∫–∏–µ ‚Äî –ø–æ—Ö–æ–∂–µ, –º–∞–ª–æ —Å–≤–µ—Ç–∞ –∏–ª–∏ –ø–µ—Ä–µ–ª–∏–≤.<br>–ù–æ –Ω–µ –±–µ–¥–∞ üíö<br>‚Ä¢ –ê–∫–∫—É—Ä–∞—Ç–Ω–æ –æ–±—Ä–µ–∂—å –≤—Å—ë —Å—É—Ö–æ–µ.<br>‚Ä¢ –ù–µ –ø–æ–ª–∏–≤–∞–π 4‚Äì5 –¥–Ω–µ–π, –ø—É—Å—Ç—å –∑–µ–º–ª—è –ø—Ä–æ—Å–æ—Ö–Ω–µ—Ç.<br>‚Ä¢ –ü–µ—Ä–µ—Å—Ç–∞–≤—å –±–ª–∏–∂–µ –∫ —Å–≤–µ—Ç—É, –Ω–æ –Ω–µ –ø–æ–¥ –ø—Ä—è–º—ã–µ –ª—É—á–∏.<br>‚Ä¢ –ß–µ—Ä–µ–∑ –Ω–µ–¥–µ–ª—å–∫—É ‚Äî —Å–ª–µ–≥–∫–∞ –ø–æ–ª–µ–π —Å –∫–∞–ø–ª–µ–π —Å—Ç–∏–º—É–ª—è—Ç–æ—Ä–∞ (‚Äú–¶–∏—Ä–∫–æ–Ω‚Äù –∏–ª–∏ ‚Äú–≠–ø–∏–Ω‚Äù).<br>–ï—Å–ª–∏ –ø–æ—è–≤—è—Ç—Å—è –Ω–æ–≤—ã–µ –ª–∏—Å—Ç—å—è ‚Äî –ø–æ–±–µ–¥–∞ üå±", 'sad')
    await send_msg(message.chat.id, f"<b>{name2}</b> –±–æ–¥—Ä–µ–Ω—å–∫–∏–π, –ø—Ä–æ—Å—Ç–æ —É—Å—Ç–∞–ª üå∏<br>–û–ø–∞–≤—à–∏–µ –ª–µ–ø–µ—Å—Ç–∫–∏ ‚Äî –Ω–æ—Ä–º–∞–ª—å–Ω–æ.<br>‚Ä¢ –£–¥–∞–ª–∏ —Å—É—Ö–∏–µ —Ü–≤–µ—Ç—ã.<br>‚Ä¢ –ü–æ–ª–∏–≤–∞–π –ø–æ—Å–ª–µ –ø—Ä–æ—Å—É—à–∫–∏.<br>‚Ä¢ –ü–æ–≤–µ—Ä–Ω–∏ –∫ —Å–≤–µ—Ç—É.<br>‚Ä¢ –ß–µ—Ä–µ–∑ 2‚Äì3 –Ω–µ–¥–µ–ª–∏ ‚Äî –ø–æ–¥–∫–æ—Ä–º–∏ —É–¥–æ–±—Ä–µ–Ω–∏–µ–º –¥–ª—è –≥–µ—Ä–∞–Ω–∏ üåø<br>–ê –Ω—É –±—ã—Å—Ç—Ä–æ –∫ –ú–∞—à–∫–µ ‚Äî –æ–Ω–∞ —Ç–æ—á–Ω–æ –∫—É–ø–∏—Ç! üí∏", 'happy')
    # –£—Ä–æ–∫
    kb = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text="–ì–æ—Ç–æ–≤–æ!")]], resize_keyboard=True)
    await send_msg(message.chat.id, "–ù—É —á—Ç–æ, –ú–∏–ª–∞–Ω–æ—á–∫–∞, –Ω–∞—á–Ω—ë–º –Ω–∞—à –ø–µ—Ä–≤—ã–π —É—Ä–æ–∫ —Å–∞–¥–æ–≤–Ω–∏—Ü—ã? üå∏<br>–¢—ã –ø–æ–ª—É—á–∏—à—å —Å–≤–æ–∏ –ø–µ—Ä–≤—ã–µ –æ—á–∫–∏ –∑–∞–±–æ—Ç—ã üí´<br><b>üåû –£—Ä–æ–∫ 1: –°–≤–µ—Ç!</b><br>–ü–æ—Å—Ç–∞–≤—å —Ü–≤–µ—Ç–æ—á–∫–∏ –±–ª–∏–∂–µ –∫ –æ–∫–Ω—É.<br>–°–¥–µ–ª–∞–ª–∞?", 'happy', kb)
    await state.set_state(Form.lesson_light)

@dp.message_handler(state=Form.lesson_light, text="–ì–æ—Ç–æ–≤–æ!")
async def lesson_light_done(message: types.Message, state: FSMContext):
    data = load_data()
    data["milanochka"]["xp_total"] += 5
    save_data(data)
    kb = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text="–î–∞, —Å—É—Ö–æ"), KeyboardButton(text="–ù–µ—Ç, –≤–ª–∞–∂–Ω–æ")]], resize_keyboard=True)
    await send_msg(message.chat.id, random.choice(PRAISE) + "<br>–û–Ω–∏ —É–∂–µ —Ç—è–Ω—É—Ç—Å—è –∫ —Å–æ–ª–Ω—ã—à–∫—É! +5 –æ—á–∫–æ–≤ üíö<br><b>üíß –£—Ä–æ–∫ 2: –ü–æ–ª–∏–≤.</b><br>–ü—Ä–æ–≤–µ—Ä—å –∑–µ–º–ª—é ‚Äî —Å—É—Ö–æ–π –≤–µ—Ä—Ö–Ω–∏–π —Å–ª–æ–π?", 'happy', kb)
    await state.set_state(Form.lesson_water)

@dp.message_handler(state=Form.lesson_water)
async def lesson_water_done(message: types.Message, state: FSMContext):
    data = load_data()
    data["milanochka"]["xp_total"] += 5
    for p in data["plants"].values():
        p["last_water"] = datetime.now().isoformat()
    data["milanochka"]["level"]
```
